from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Filter, Command, CommandStart
from aiogram.fsm.context import FSMContext
import app.keyboards as kb
from app.database.admin_service import search_driver, update_driver, block_driver,get_all_drivers
from app.state import SearchState, RassylkaStates
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton,InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram import Bot

admin1 = Router()

class Admin(Filter):
    async def __call__(self, message: Message):
        return message.from_user.id in [1075213318]
    

@admin1.message(Admin(), F.text == 'üì¢–†–∞—Å—Å—ã–ª–∫–∞')
async def rassylka(message: Message, bot: Bot, state: FSMContext):
    # –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–±–æ—Ä —Ä–∞—Å—Å—ã–ª–∫–∏
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏:\n1. –í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º\n2. –ü–æ –≥–æ—Ä–æ–¥–∞–º", reply_markup=kb.city_keyboard)
    await state.set_state(RassylkaStates.choosing_rassylka_type)


@admin1.message(Admin(), F.text == "–í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
async def send_to_all_users(message: Message, bot: Bot, state: FSMContext):
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏:")
    await state.set_state(RassylkaStates.awaiting_rassylka_text)
    await state.update_data(rassylka_type="all")


@admin1.message(Admin(), F.text == "–ü–æ –≥–æ—Ä–æ–¥–∞–º")
async def send_by_city(message: Message, bot: Bot, state: FSMContext):
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≥–æ—Ä–æ–¥
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:")
    await state.set_state(RassylkaStates.awaiting_city_name)


@admin1.message(Admin(), RassylkaStates.awaiting_rassylka_text)
async def handle_rassylka_text(message: Message, bot: Bot, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏
    text = message.text
    data = await state.get_data()

    # –í—ã–±–∏—Ä–∞–µ–º —Ä–∞—Å—Å—ã–ª–∫—É –ø–æ —Ç–∏–ø—É
    if data.get("rassylka_type") == "all":
        drivers = await get_all_drivers()
        for driver in drivers:
            try:
                await bot.send_message(driver.tg_id, text)
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {driver.tg_id}: {e}")

    await message.answer("–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!",reply_markup=kb.admin_main)
    await state.clear()


@admin1.message(Admin(), RassylkaStates.awaiting_city_name)
async def handle_city_name(message: Message, bot: Bot, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
    city = message.text
    await state.update_data(city_name=city)

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏:")
    await state.set_state(RassylkaStates.awaiting_rassylka_text_city)


@admin1.message(Admin(), RassylkaStates.awaiting_rassylka_text_city)
async def handle_rassylka_text_by_city(message: Message, bot: Bot, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏
    text = message.text
    data = await state.get_data()
    city_name = data.get("city_name")

    # –ò—â–µ–º –≤–æ–¥–∏—Ç–µ–ª–µ–π –ø–æ –≥–æ—Ä–æ–¥—É
    drivers = await search_driver("city", city_name)
    if not drivers:
        await message.answer(f"–ù–µ—Ç –≤–æ–¥–∏—Ç–µ–ª–µ–π –≤ –≥–æ—Ä–æ–¥–µ {city_name}.")
    else:
        for driver in drivers:
            try:
                await bot.send_message(driver.tg_id, text)
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {driver.tg_id}: {e}")

    await message.answer(f"–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É {city_name} –∑–∞–≤–µ—Ä—à–µ–Ω–∞!",reply_markup=kb.admin_main)
    await state.clear()